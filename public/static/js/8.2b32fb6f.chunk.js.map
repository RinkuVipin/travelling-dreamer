{"version":3,"sources":["shared/components/UIElements/Card/Card.js","shared/components/UIElements/Map/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/containers/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","ref","PlaceItem","useHttpHooks","loading","error","getRequest","clearError","history","useHistory","useContext","AuthContext","isSignedIn","loggedUser","token","useState","showMap","setShowMap","showDelPopup","setShowDelPopup","closeMapHandler","cancelDelPopupHandler","confirmDelPopupHandler","a","process","placeId","Authorization","loadAfterDelete","replace","console","log","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","creatorId","to","PlaceList","places","length","userId","map","place","location","UserPlaces","setPlaces","useParams","data","fetchPlaces","prevState","filter"],"mappings":"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","file":"static/js/8.2b32fb6f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./Map.css\";\r\n\r\nconst Map = (props) => {\r\n  const mapRef = useRef();\r\n\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM(),\r\n        }),\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n        zoom: zoom,\r\n      }),\r\n    });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n      id=\"map\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { Fragment, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"../../shared/components/UIElements/Button/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport Map from \"../../shared/components/UIElements/Map/Map\";\r\nimport Modal from \"../../shared/components/UIElements/Modal/Modal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./PlaceItem.css\";\r\nimport useHttpHooks from \"../../shared/hooks/http-hooks\";\r\nimport ErrorModal from \"../../shared/components/UIElements/Modal/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/Spinner/LoadingSpinner\";\r\n\r\nconst PlaceItem = (props) => {\r\n  const { loading, error, getRequest, clearError } = useHttpHooks();\r\n\r\n  const history = useHistory();\r\n  const { isSignedIn, loggedUser, token } = useContext(AuthContext);\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showDelPopup, setShowDelPopup] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDelPopupHandler = () => setShowDelPopup(true);\r\n\r\n  const cancelDelPopupHandler = () => setShowDelPopup(false);\r\n\r\n  const confirmDelPopupHandler = async () => {\r\n    setShowDelPopup(false);\r\n    try {\r\n      await getRequest(\r\n        `${process.env.REACT_APP_SERVER_URL}/places/${props.placeId}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        }\r\n      );\r\n      props.loadAfterDelete(props.placeId);\r\n      history.replace(`/places/user/${loggedUser}`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"place-item__map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showDelPopup}\r\n        onCancel={cancelDelPopupHandler}\r\n        header=\"Delete Place ?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <Fragment>\r\n            <Button onClick={cancelDelPopupHandler} inverse>\r\n              CANCEL\r\n            </Button>\r\n            <Button onClick={confirmDelPopupHandler} danger>\r\n              DELETE\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      >\r\n        <p>Are you sure you want to delete this place permanently ? </p>\r\n      </Modal>\r\n\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {loading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSETS_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {isSignedIn && loggedUser === props.creatorId && (\r\n              <Button to={`/places/${props.placeId}`}>EDIT</Button>\r\n            )}\r\n            {isSignedIn && loggedUser === props.creatorId && (\r\n              <Button danger onClick={showDelPopupHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React, { useContext } from \"react\";\r\nimport Button from \"../../shared/components/UIElements/Button/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport \"./PlaceList.css\";\r\n\r\nconst PlaceList = (props) => {\r\n  const { loggedUser } = useContext(AuthContext);\r\n\r\n  if (props.places.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Places Found!</h2>\r\n          {props.userId === loggedUser && (\r\n            <>\r\n              <h2>Do you want to create one ?</h2>{\" \"}\r\n              <Button to=\"/places/new\">Share Place</Button>{\" \"}\r\n            </>\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.places.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          placeId={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creatorId}\r\n          coordinates={place.location}\r\n          loadAfterDelete={props.loadAfterDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport useHttpHooks from \"../../shared/hooks/http-hooks\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/Spinner/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/Modal/ErrorModal\";\r\n\r\nconst UserPlaces = () => {\r\n  const [places, setPlaces] = useState();\r\n  const { loading, error, getRequest, clearError } = useHttpHooks();\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const data = await getRequest(\r\n          `${process.env.REACT_APP_SERVER_URL}/places/user/${userId}`\r\n        );\r\n        setPlaces(data.places);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchPlaces();\r\n  }, [getRequest, userId]);\r\n\r\n  const loadAfterDelete = (placeId) => {\r\n    setPlaces((prevState) => prevState.filter((place) => place.id !== placeId));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {places && (\r\n        <PlaceList\r\n          places={places}\r\n          userId={userId}\r\n          loadAfterDelete={loadAfterDelete}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}