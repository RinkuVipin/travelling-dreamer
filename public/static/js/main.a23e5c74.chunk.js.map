{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/Spinner/LoadingSpinner.js","shared/components/UIElements/BackDrop/BackDrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","isSignedIn","loggedUser","token","userSignin","userSignout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","authenticate","useContext","to","exact","SideDrawer","drawerContent","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","closeSideDrawer","MainNavigation","useState","drawerOpen","setDrawerOpen","useAuthHook","setToken","tokenExpiration","setTokenExpiration","setLoggedUser","useCallback","userId","userToken","existingTokenExpire","tokenExpireTime","Date","getTime","localStorage","setItem","JSON","stringify","tokenExpire","toISOString","removeItem","useEffect","userData","parse","getItem","remainingTime","setTimeout","clearTimeout","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","Provider","value","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render"],"mappings":"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","file":"static/js/main.a23e5c74.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isSignedIn: false,\r\n  loggedUser: null,\r\n  token: null,\r\n  userSignin: () => {},\r\n  userSignout: () => {},\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./BackDrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useCallback, useContext, useState, useEffect } from \"react\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\n\r\nlet logoutTimer;\r\n\r\nconst useAuthHook = () => {\r\n  const authenticate = useContext(AuthContext);\r\n  const [token, setToken] = useState();\r\n  const [tokenExpiration, setTokenExpiration] = useState();\r\n  const [loggedUser, setLoggedUser] = useState(authenticate.loggedUser);\r\n\r\n  const userSignin = useCallback((userId, userToken, existingTokenExpire) => {\r\n    setToken(userToken);\r\n    setLoggedUser(userId);\r\n    const tokenExpireTime =\r\n      existingTokenExpire || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpiration(tokenExpireTime);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: userId,\r\n        tokenExpire: tokenExpireTime.toISOString(),\r\n        token: userToken,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const userSignout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpiration(null);\r\n    setLoggedUser(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (userData && userData.token) {\r\n      if (new Date(userData.tokenExpire) > new Date()) {\r\n        userSignin(\r\n          userData.userId,\r\n          userData.token,\r\n          new Date(userData.tokenExpire)\r\n        );\r\n      }\r\n    }\r\n  }, [userSignin]);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpiration) {\r\n      const remainingTime = tokenExpiration.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(userSignout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [userSignout, token, tokenExpiration]);\r\n  return { userSignout, userSignin, loggedUser, token };\r\n};\r\n\r\nexport default useAuthHook;\r\n","import React from \"react\";\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\n\r\nconst NavLinks = (props) => {\r\n  const authenticate = useContext(AuthContext);\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {authenticate.isSignedIn && (\r\n        <li>\r\n          <NavLink to={`/places/user/${authenticate.loggedUser}`}>\r\n            VISITED PLACES\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n      {authenticate.isSignedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {authenticate.isSignedIn ? (\r\n        <li>\r\n          <NavLink to=\"/auth\">\r\n            <button onClick={authenticate.userSignout}>SIGN OUT</button>\r\n          </NavLink>\r\n        </li>\r\n      ) : (\r\n        <li>\r\n          <NavLink to=\"/auth\">SIGN IN</NavLink>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const drawerContent = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.closeSideDrawer}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    drawerContent,\r\n    document.getElementById(\"side-drawer-hook\")\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backdrop from \"../UIElements/BackDrop/BackDrop\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport \"./MainNavigation.css\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  const openSideDrawer = () => {\r\n    setDrawerOpen(true);\r\n  };\r\n\r\n  const closeSideDrawer = () => {\r\n    setDrawerOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {drawerOpen && <Backdrop onClick={closeSideDrawer} />}\r\n\r\n      <SideDrawer closeSideDrawer={closeSideDrawer} show={drawerOpen}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openSideDrawer}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Track Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n//import Users from \"./user/containers/Users\";\n// import NewPlace from \"./places/containers/NewPlace\";\n// import UserPlaces from \"./places/containers/UserPlaces\";\n// import UpdatePlace from \"./places/containers/UpdatePlace\";\n// import Auth from \"./user/containers/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport useAuthHook from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/Spinner/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./user/containers/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/containers/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/containers/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/containers/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/containers/Auth\"));\n\nconst App = () => {\n  const { userSignout, userSignin, loggedUser, token } = useAuthHook();\n  return (\n    <AuthContext.Provider\n      value={{\n        isSignedIn: !!token,\n        token,\n        loggedUser,\n        userSignout,\n        userSignin,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            <Switch>\n              <Route path=\"/\" exact>\n                <Users />\n              </Route>\n\n              <Route path=\"/places/new\" exact>\n                <NewPlace />\n              </Route>\n\n              <Route path=\"/places/user/:userId/\" exact>\n                <UserPlaces />\n              </Route>\n\n              <Route path=\"/places/:placeId\" exact>\n                <UpdatePlace />\n              </Route>\n\n              <Route path=\"/auth\" exact>\n                <Auth />\n              </Route>\n\n              <Redirect to=\"/\" />\n            </Switch>\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}