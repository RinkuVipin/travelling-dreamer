{"version":3,"sources":["shared/components/UIElements/Card/Card.js","shared/components/UIElements/Avatar/Avatar.js","user/components/UserItem.js","user/components/UserList.js","user/containers/Users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","userId","process","userImage","userName","visitedPlaces","UserList","users","length","map","user","id","name","places","Users","useState","setUsers","useHttpHooks","loading","error","getRequest","clearError","useEffect","a","data","console","log","fetchUsers","LoadingSpinner","ErrorModal","onClear"],"mappings":"qIAYeA,IARF,SAAAC,GACX,OACE,qBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,MAAxD,SACGF,EAAMG,a,2ECSEC,IAZA,SAAAJ,GACb,OACE,qBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,MAA1D,SACE,qBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,a,gMCoBpCE,G,MAxBE,SAACV,GAChB,OACE,oBAAIC,UAAU,YAAd,SACE,cAACF,EAAA,EAAD,CAAME,UAAU,qBAAhB,SACE,eAAC,IAAD,CAAMU,GAAE,sBAAiBX,EAAMY,QAA/B,UACE,qBAAKX,UAAU,mBAAf,SACE,cAACG,EAAA,EAAD,CACEE,MAAK,UAAKO,2CAAL,YAAyCb,EAAMc,WACpDP,IAAKP,EAAMe,aAGf,sBAAKd,UAAU,kBAAf,UACE,6BAAKD,EAAMe,WACX,+BACGf,EAAMgB,cACkB,IAAxBhB,EAAMgB,cAAsB,SAAW,yBCSvCC,G,MAzBE,SAACjB,GAChB,OAA2B,IAAvBA,EAAMkB,MAAMC,OAEZ,qBAAKlB,UAAU,SAAf,SACE,cAACF,EAAA,EAAD,UACE,gEAMN,oBAAIE,UAAU,aAAd,SACGD,EAAMkB,MAAME,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEET,OAAQS,EAAKC,GACbP,SAAUM,EAAKE,KACfT,UAAWO,EAAKf,MAChBU,cAAeK,EAAKG,OAAOL,QAJtBE,EAAKC,W,QCkBLG,UA/BD,WAAO,IAAD,EACQC,qBADR,mBACXR,EADW,KACJS,EADI,OAEiCC,cAA3CC,EAFU,EAEVA,QAASC,EAFC,EAEDA,MAAOC,EAFN,EAEMA,WAAYC,EAFlB,EAEkBA,WAgBpC,OAdAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEIH,EACjBlB,sDAHa,OAETsB,EAFS,OAKfR,EAASQ,EAAKjB,OALC,gDAOfkB,QAAQC,IAAR,MAPe,yDAAH,qDAUhBC,KACC,CAACP,IAGF,eAAC,WAAD,WACGF,GACC,qBAAK5B,UAAU,SAAf,SACE,cAACsC,EAAA,EAAD,MAGJ,cAACC,EAAA,EAAD,CAAYV,MAAOA,EAAOW,QAAST,IAClCd,GAAS,cAAC,EAAD,CAAUA,MAAOA","file":"static/js/7.0cc3ea0f.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Avatar from \"../../shared/components/UIElements/Avatar/Avatar\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport \"./UserItem.css\";\r\n\r\nconst UserItem = (props) => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n        <Link to={`places/user/${props.userId}`}>\r\n          <div className=\"user-item__image\">\r\n            <Avatar\r\n              image={`${process.env.REACT_APP_ASSETS_URL}/${props.userImage}`}\r\n              alt={props.userName}\r\n            />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            <h2>{props.userName}</h2>\r\n            <h3>\r\n              {props.visitedPlaces}\r\n              {props.visitedPlaces === 1 ? \" Place\" : \" Places\"}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from \"react\";\r\nimport Card from \"../../shared/components/UIElements/Card/Card\";\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UserList.css\";\r\n\r\nconst UserList = (props) => {\r\n  if (props.users.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No registered users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.users.map((user) => (\r\n        <UserItem\r\n          key={user.id}\r\n          userId={user.id}\r\n          userName={user.name}\r\n          userImage={user.image}\r\n          visitedPlaces={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport ErrorModal from \"../../shared/components/UIElements/Modal/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/Spinner/LoadingSpinner\";\nimport UserList from \"../components/UserList\";\nimport useHttpHooks from \"../../shared/hooks/http-hooks\";\n\nconst Users = () => {\n  const [users, setUsers] = useState();\n  const { loading, error, getRequest, clearError } = useHttpHooks();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await getRequest(\n          process.env.REACT_APP_SERVER_URL + \"/users\"\n        );\n        setUsers(data.users);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchUsers();\n  }, [getRequest]);\n\n  return (\n    <Fragment>\n      {loading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <ErrorModal error={error} onClear={clearError} />\n      {users && <UserList users={users} />}\n    </Fragment>\n  );\n};\n\nexport default Users;\n"],"sourceRoot":""}